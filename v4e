#!/bin/bash
# Written by Dan Klassen <dan@triplei.ca>
# Last Updated - 2016-05-14

VERSION="1.0.1"
CAPTURE_STILL=false
CAPTURE_TIMESTAMP="00:00:05.000"
VSCALE="480:-1"

helpText() {
    echo "Video 4 Everybody Conversion script v$VERSION"
    echo ""
    echo "Convert the passed in video file to various formats for the web"
    echo "OPTIONS:"
    echo "-c capture a still cover photo (use -t to seek to a specific point in the video)"
    echo "-d input directory (required if input file is omitted)"
    echo "-i input file (required if directory is omitted)"
    echo "-t seek to a specific timestamp for a screen capture (defaults to '00:00:05.000')"
    echo "-o output file (required)"
    echo "-v video scaling (defaults to 480:-1 to preserver aspect ratio)"
    exit 0
}

convertFile() {
    echo "Creating .mp4 version"
    ffmpeg -i "$1" -codec:v libx264 -preset slow -profile:v main -crf 20 -codec:a aac -ab 128k -vf scale="$VSCALE" "$2".mp4
    echo "Creating .ogv version"
    ffmpeg -i "$1" -codec:v libtheora -q:v 6 -codec:a libvorbis -ab 128k -vf scale="$VSCALE" "$2".ogv
    echo "Creating .webm version"
    ffmpeg -i "$1" -codec:v libvpx -q:v 6 -codec:a libvorbis -ab 128k -vf scale="$VSCALE" "$2".webm
    if [ "$CAPTURE_STILL" = true ]; then
        echo "Capturing cover photo"
        ffmpeg -i "$1" -ss "$CAPTURE_TIMESTAMP" -vframes 1 "$2".png
    fi
    echo "done"
}

if [ $# == 0 ]; then
    helpText
fi

while getopts "hd:i:o:v:ct:" opt; do
    case $opt in
        c)
            CAPTURE_STILL=true
            ;;
        d)
            DIRECTORY="$OPTARG" >&2
            ;;
        h)
            helpText
            exit 0
            ;;
        i)
            FILENAME="$OPTARG" >&2
            ;;
        o)
            OUTPUT="$OPTARG" >&2
            ;;
        t)
            CAPTURE_TIMESTAMP="$OPTARG" >&2
            ;;
        v)
            VSCALE=$OPTARG >&2
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument" >&2
            exit 1
            ;;
    esac
done

if [ -z $DIRECTORY ] && [ -z $FILENAME ]; then
    echo "You must either pass in a filename or a directory with either -i or -d respectively" >&2
    exit 1
fi

if [ -z $OUTPUT ]; then
    echo "please set -o with the base output file name (no extension) if you used -i or the folder if you used -d" >&2
    exit 1
fi

if [ ! -z "$FILENAME" ]; then

    if [ ! -e "$FILENAME" ]; then
        echo "$FILENAME does not exist" >&2
        exit 1
    fi

    echo "Processing $FILENAME"
    convertFile "$FILENAME" "$OUTPUT"
fi

if [ ! -z "$DIRECTORY" ]; then
    if [ ! -d "$DIRECTORY" ]; then
        echo "Source Directory $DIRECTORY does not exist" >&2
        exit 1
    fi
    mkdir -p "$OUTPUT"
    for file in "$DIRECTORY"/*
    do
        if [ -e "$file" ]; then
            name=`basename "$file"`
            name=`echo ${name} | cut -f 1 -d '.'`
            output="$OUTPUT/$name"
            convertFile "$file" "$output"
        fi
    done

fi

exit 0